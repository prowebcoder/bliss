

<div class="highlight-text-section">
  <p class="subheading">{{ section.settings.subheading }}</p>

  <div class="heading-text">
    {{ section.settings.heading }}
  </div>

  <a href="{{ section.settings.button_link }}" class="button">
    {{ section.settings.button_text }}
  </a>
</div>

<style>
  .highlight-text-section {
    padding: 40px 20px;
    text-align: center;
    max-width: 800px;
    margin: 0 auto;
  }

  .subheading {
    font-size: 1.2em;
    margin-bottom: 20px;
    color: #333;
  }

  .heading-text {
    font-size: 1.8em;
    line-height: 1.6;
    position: relative;
    color: #333;
  }

  .heading-text p {
    display: inline;
  }

  .heading-text span {
    opacity: 0.3; /* Initial light text color */
    transition: opacity 0.8s ease;
  }

  .heading-text span.highlight {
    opacity: 1; /* Darker text color on scroll */
  }

  .button {
    display: inline-block;
    margin-top: 30px;
    padding: 12px 24px;
    background-color: #000;
    color: #fff;
    text-decoration: none;
    border-radius: 5px;
    font-size: 1em;
    transition: background-color 0.8s ease;
  }

  .button:hover {
    background-color: #444;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const textElement = document.querySelector('.heading-text');
    const text = textElement.innerText;
    textElement.innerHTML = '';

    // Split text into individual characters and wrap them in spans
    for (let i = 0; i < text.length; i++) {
      const span = document.createElement('span');
      span.innerText = text[i];
      textElement.appendChild(span);
    }

    const spans = document.querySelectorAll('.heading-text span');

    // Add scroll event listener
    window.addEventListener('scroll', function() {
      const scrollPosition = window.scrollY;
      const elementPosition = textElement.getBoundingClientRect().top + window.scrollY;
      const windowHeight = window.innerHeight;

      // Adjust the scroll trigger position (e.g., start effect when section is 30% in view)
      const triggerPosition = elementPosition - (windowHeight * 0.5);

      spans.forEach((span, index) => {
        // Adjust the scroll threshold for quicker effect
        if (scrollPosition > triggerPosition + (index * 1)) { // Reduced multiplier for quicker effect
          span.classList.add('highlight');
        } else {
          span.classList.remove('highlight');
        }
      });
    });
  });
</script>

{% schema %}
{
  "name": "Highlight Scroll",
  "settings": [
    {
      "type": "text",
      "id": "subheading",
      "label": "Subheading",
      "default": "ABOUT EURUS PUFF"
    },
    {
      "type": "richtext",
      "id": "heading",
      "label": "Heading Text",
      "default": "<p>We are dedicated to a holistic and green-focused approach to beauty. We believe in the power of nature's ingredients to nourish and heal, without compromising on effectiveness.</p>"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button Text",
      "default": "Read our story"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button Link"
    }
  ],
  "presets": [
    {
      "name": "Highlight Scroll",
      "category": "Custom"
    }
  ]
}
{% endschema %}